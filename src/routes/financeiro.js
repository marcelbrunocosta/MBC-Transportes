const express = require('express');\nconst router = express.Router();\nconst prisma = require('../db');\nconst autenticarToken = require('../middleware/auth');\n\nrouter.get('/pagar', autenticarToken, async (req, res) => {\n  const contas = await prisma.contaPagar.findMany({ orderBy: { vencimento: 'asc' } });\n  res.json(contas);\n});\n\nrouter.post('/pagar', autenticarToken, async (req, res) => {\n  const conta = await prisma.contaPagar.create({ data: req.body });\n  res.status(201).json(conta);\n});\n\nrouter.post('/pagar/:id/pagar', autenticarToken, async (req, res) => {\n  const id = parseInt(req.params.id);\n  const conta = await prisma.contaPagar.update({ where: { id }, data: { pago: true, dataPagamento: new Date(), pagoPorId: req.usuario.usuarioId } });\n  res.json(conta);\n});\n\nrouter.get('/receber', autenticarToken, async (req, res) => {\n  const contas = await prisma.contaReceber.findMany({ orderBy: { vencimento: 'asc' }, include: { viagem: true } });\n  res.json(contas);\n});\n\nrouter.post('/receber', autenticarToken, async (req, res) => {\n  const conta = await prisma.contaReceber.create({ data: req.body });\n  res.status(201).json(conta);\n});\n\nrouter.post('/receber/:id/receber', autenticarToken, async (req, res) => {\n  const id = parseInt(req.params.id);\n  const conta = await prisma.contaReceber.update({ where: { id }, data: { recebido: true, dataRecebimento: new Date(), recebidoPorId: req.usuario.usuarioId } });\n  res.json(conta);\n});\n\nmodule.exports = router;\n