const express = require('express');\nconst router = express.Router();\nconst prisma = require('../db');\nconst autenticarToken = require('../middleware/auth');\n\nrouter.get('/', autenticarToken, async (req, res) => {\n  const now = new Date();\n  const in30 = new Date(); in30.setDate(now.getDate() + 30);\n\n  const totalPagar = await prisma.contaPagar.aggregate({ _sum: { valor: true } });\n  const pagarVencidas = await prisma.contaPagar.aggregate({ where: { vencimento: { lt: now }, pago: false }, _sum: { valor: true } });\n  const pagarProximas30 = await prisma.contaPagar.aggregate({ where: { vencimento: { gte: now, lte: in30 }, pago: false }, _sum: { valor: true } });\n\n  const totalReceber = await prisma.contaReceber.aggregate({ _sum: { valor: true } });\n  const receberVencidas = await prisma.contaReceber.aggregate({ where: { vencimento: { lt: now }, recebido: false }, _sum: { valor: true } });\n  const receberProximas30 = await prisma.contaReceber.aggregate({ where: { vencimento: { gte: now, lte: in30 }, recebido: false }, _sum: { valor: true } });\n\n  const comissaoPendente = await prisma.comissaoMotorista.aggregate({ where: { pago: false }, _sum: { valorPago: true } });\n\n  res.json({\n    totalPagar: totalPagar._sum.valor ?? 0,\n    pagarVencidas: pagarVencidas._sum.valor ?? 0,\n    pagarProximas30: pagarProximas30._sum.valor ?? 0,\n    totalReceber: totalReceber._sum.valor ?? 0,\n    receberVencidas: receberVencidas._sum.valor ?? 0,\n    receberProximas30: receberProximas30._sum.valor ?? 0,\n    comissaoPendente: comissaoPendente._sum.valorPago ?? 0\n  });\n});\n\nmodule.exports = router;\n